apply plugin: 'osgi'
apply plugin: 'com.zyxist.chainsaw'

description = 'Apache Jena - ARQ (SPARQL 1.1 Query Engine)'

ext {
    javaModuleName = 'org.apache.jena.arq'
}

javaModule {
    name = javaModuleName
    extraTestModules = ['org.apache.jena.base', 'org.apache.jena.core']
}

dependencies {
    compile project(':jena.base-jpms')
    compile project(':jena.core-jpms')
    compile project(':jena.iri-jpms')
    compile("com.github.andrewoma.dexx:collection:$dexxCollectionVersion")
    compile("com.google.guava:guava:$guavaVersion")
    compile ("com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion") {force = true}
    compile ("com.fasterxml.jackson.core:jackson-core:$jacksonVersion") {force = true}
    compile ("com.fasterxml.jackson.core:jackson-databind:$jacksonVersion") {force = true}
    compile("org.apache.httpcomponents:httpclient:$httpClientVersion") {
        exclude(module: 'commons-logging')
    }
    compile("com.github.jsonld-java:jsonld-java:$jsonLdVersion") {
        exclude(module: 'commons-logging')
        exclude(module: 'httpclient-osgi')
        exclude(module: 'httpcore-osgi')
        exclude(module: 'slf4j-api')
    }
    compile("org.apache.httpcomponents:httpclient-cache:$httpClientVersion") {
        exclude(module: 'commons-logging')
    }
    compile("org.apache.thrift:libthrift:$libthriftVersion") {
        exclude(module: 'httpcore')
        exclude(module: 'commons-lang3')
    }
    compile("org.slf4j:jcl-over-slf4j:$slf4jVersion")
    compile("org.apache.commons:commons-lang3:$commonsLangVersion")

    testCompile("org.awaitility:awaitility:$awaitilityVersion") {
        exclude(module: 'hamcrest-core')
        exclude(module: 'hamcrest-library')
    }
    testCompile("com.google.guava:guava:$guavaVersion")
    testCompile("org.mockito:mockito-all:$mockitoVersion")
}

task packageTests(type: Jar) {
    from sourceSets.test.output
    classifier = 'tests'
}

artifacts.archives packageTests

configurations {
    testOutput
}

dependencies {
    testOutput sourceSets.test.output
}

jar {
    manifest {
        description project.description
        docURL project.docURL
        vendor project.vendor
        license project.license

        instruction 'Automatic-Module-Name', javaModuleName
        instruction 'Import-Package', '*'
        instruction 'Export-Package', "$javaModuleName;version=$projectOsgiVersion"
    }
}