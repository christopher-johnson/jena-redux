apply plugin: 'osgi'

description = 'Apache Jena - ARQ (SPARQL 1.1 Query Engine)'

ext {
    moduleName = 'org.apache.jena.arq'
}

dependencies {
    compile project(':jena.base')
    compile project(':jena.core')
    compile("com.google.guava:guava:$guavaVersion")
    compile("org.glassfish.main:javax.annotation:$javaxAnnotationVersion")
    compile project(':jena.iri')

    compile("org.apache.httpcomponents:httpclient:$httpClientVersion") {
        exclude(module: 'commons-logging')
    }

    compile("com.github.jsonld-java:jsonld-java:$jsonLdVersion") {
        exclude(module: 'commons-logging')
        exclude(module: 'httpclient-cache')
        exclude(module: 'httpclient')
        exclude(module: 'httpclient-osgi')
        exclude(module: 'httpcore-osgi')
        exclude(module: 'slf4j-api')
    }

    compile("org.apache.httpcomponents:httpclient-cache:$httpClientVersion") {
        exclude(module: 'commons-logging')
    }

    compile("org.apache.thrift:libthrift:$libthriftVersion") {
        exclude(module: 'httpcore')
        exclude(module: 'commons-lang3')
    }

    compile("org.apache.servicemix.bundles:org.apache.servicemix.bundles.xerces:$servicemixXercesVersion")
    compile("org.slf4j:jcl-over-slf4j:$slf4jVersion")
    compile("org.apache.commons:commons-lang3:$commonsLangVersion")

    testCompile project(path: ':jena.base', configuration: 'testOutput')
    testCompile project(path: ':jena.core', configuration: 'testOutput')
    testCompile("com.jayway.awaitility:awaitility:$awaitilityVersion")
    testCompile("com.google.guava:guava:$guavaVersion")
}

task packageTests(type: Jar) {
    from sourceSets.test.output
    classifier = 'tests'
}

artifacts.archives packageTests

configurations {
    testOutput
}

dependencies {
    testOutput sourceSets.test.output
}

jar {
    manifest {
        description project.description
        docURL project.docURL
        vendor project.vendor
        license project.license

        instruction 'Automatic-Module-Name', moduleName
        instruction 'Import-Package', '*'
        instruction 'Export-Package', "$moduleName;version=$projectOsgiVersion"
        instruction 'Require-Capability', '''\
            osgi.extender; filter:="(osgi.extender=osgi.serviceloader.processor)",
            osgi.serviceloader;
                filter:="(osgi.serviceloader=org.apache.commons.rdf.api.RDF)";
                resolution:=mandatory; cardinality:=at_least_one
            '''
    }
    appendix 'jpms'
}